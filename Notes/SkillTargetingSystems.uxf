<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>4</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1744</x>
      <y>384</y>
      <w>40</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>Skill
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1256</x>
      <y>372</y>
      <w>40</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>SkillStorage</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1548</x>
      <y>368</y>
      <w>176</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ISkillIntf
--
+GetModStorage(): TScriptInterface&lt;ISkillModStorageIntf&gt;
+GetEffectStorage(): TScriptInterface&lt;ISkillEffectStorageIntf&gt;
+ApplySkill(SkillUser: const TScriptInterface&lt;ISkillUserIntf&gt;&amp;): void
+GetSkillExecutor(): TScriptInterface&lt;ISkillExecutorIntf&gt;
+GetName(): FName</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1720</x>
      <y>384</y>
      <w>32</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1112</x>
      <y>384</y>
      <w>88</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ISkillStorageIntf</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1196</x>
      <y>392</y>
      <w>360</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
manages
m1=1
m2=0...n</panel_attributes>
    <additional_attributes>10.0;20.0;880.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1196</x>
      <y>376</y>
      <w>68</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;20.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1604</x>
      <y>520</y>
      <w>80</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ISkillEffectStorageIntf</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1092</x>
      <y>604</y>
      <w>88</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ISkillModStorageIntf</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>664</x>
      <y>492</y>
      <w>252</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>template=Intf
&lt;interface&gt;
IStorageIntf
--
+GetContents(): TArray&lt; TScriptInterface&lt;Intf&gt; &gt;
+Add(Storable: const TScriptInterface&lt;Intf&gt;&amp;, Index: int32): TScriptInterface&lt;Intf&gt;
+RemoveByIndex(Index: int32): bool
+RemoveByRef(Storable: const TScriptInterface&lt;Intf&gt;&amp;): bool
+FindByRef(Storable: const TScriptInterface&lt;Intf&gt;&amp;): int32
+FindByName(Name: FName): int32</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>904</x>
      <y>404</y>
      <w>228</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>550.0;10.0;10.0;320.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>904</x>
      <y>528</y>
      <w>708</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>1750.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>904</x>
      <y>528</y>
      <w>196</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>470.0;220.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1456</x>
      <y>640</y>
      <w>104</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=.&gt;&gt;
&lt;&lt;bind&gt;&gt;
&lt;T-&gt; ISkillEffectIntf&gt;
m1=1
m2=1</panel_attributes>
    <additional_attributes>240.0;90.0;10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1552</x>
      <y>644</y>
      <w>176</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ISkillEffectIntf
--
+ApplyEffect(SkillUser: const TScriptInterface&lt;ISkillUserIntf&gt;&amp;): void
+GetName(): FName</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1640</x>
      <y>536</y>
      <w>32</w>
      <h>116</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
manages
m1=1
m2=0...n</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;270.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1620</x>
      <y>712</y>
      <w>40</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>SkillEffect
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1640</x>
      <y>692</y>
      <w>12</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1552</x>
      <y>760</y>
      <w>176</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ISkillModIntf
--
+ApplyMod(Skill: const TScriptInterface&lt;ISkillIntf&gt;&amp;): void
+GetName(): FName</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1132</x>
      <y>624</y>
      <w>428</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
manages
m1=1
m2=0...n</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;420.0;1050.0;420.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1640</x>
      <y>736</y>
      <w>12</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1620</x>
      <y>728</y>
      <w>40</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>SkillMod
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1132</x>
      <y>416</y>
      <w>512</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
manages
m1=1
m2=1</panel_attributes>
    <additional_attributes>1260.0;10.0;1260.0;170.0;10.0;170.0;10.0;470.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1640</x>
      <y>416</y>
      <w>32</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
manages
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;180.0;10.0;260.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>792</x>
      <y>392</y>
      <w>148</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Note..
I would just use templates here, but you can't
have templated UObjects (like UInterface) to
make it visible to Blueprint.

Therefore, we will need to create new ones for each type.
Will likely each use an identical, hidden, templated, &amp; 
non-UObject class for implementation to avoid too much 
code duplication.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1296</x>
      <y>244</y>
      <w>176</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ISkillUserIntf
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1168</x>
      <y>264</y>
      <w>136</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
owns
m1=1
m2=1</panel_attributes>
    <additional_attributes>320.0;20.0;10.0;20.0;10.0;300.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1720</x>
      <y>412</y>
      <w>60</w>
      <h>392</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Modifies
m1=1
m2=0...n</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;950.0;20.0;950.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1468</x>
      <y>272</y>
      <w>176</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
affects
m1=1...n
m2=1</panel_attributes>
    <additional_attributes>10.0;20.0;420.0;20.0;420.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1632</x>
      <y>180</y>
      <w>60</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=.
distributes
m1=1
m2=1...n
</panel_attributes>
    <additional_attributes>10.0;250.0;110.0;250.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1300</x>
      <y>72</y>
      <w>176</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ISkillExecutorIntf
--
+GetSkillStorage(): TScriptInterface&lt;ISkillStorageIntf&gt;
+UseSkillByName(SkillName: FName): bool
+UseSkillByRef(SkillRef: TScriptInterface&lt;ISkillIntf&gt;
+GetName(): FName</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1572</x>
      <y>132</y>
      <w>176</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ISkillDistributorIntf
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>96</y>
      <w>108</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;10.0;120.0;160.0;250.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1380</x>
      <y>120</y>
      <w>16</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;310.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1480</x>
      <y>188</y>
      <w>156</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>Note..
SkillExecutors have the capacity to store and "use" skills.

SkillUsers vs. SkillDistributors are philosophically
different objects.

SkillDistributors are meant to be more transient objects,
existing for the sole purpose of delivering its skills.

SkillUsers exist more permanently, potentially gaining and 
losing new Skills over time.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1632</x>
      <y>52</y>
      <w>156</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Note..
Example of a concrete ISkillDistributorIntf
-
Gravity Stun Grenade
::Targets SkillUsers within a given spherical radius
  using ITargetingVolumeIntf.
Skill 1) For 2 seconds, every 0.5 seconds a pulse is emitted
         that draws in nearby SkillUsers.
- periodically triggered Skill usage!
Skill 2) Detonates, damaging and stunning them all.
- different skill with multiple effects!</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1228</x>
      <y>300</y>
      <w>132</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>Note..
e.g. Any character that can acquire new skills</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>340</y>
      <w>40</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>SkillUser
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1384</x>
      <y>292</y>
      <w>344</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
realizes</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0;840.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2208</x>
      <y>132</y>
      <w>176</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ITargetingMethodIntf
--
+GetTargetables(): TArray&lt; TScriptInterface&lt;ITargetableIntf&gt; &gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2300</x>
      <y>180</y>
      <w>52</w>
      <h>164</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;390.0;110.0;390.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2344</x>
      <y>204</y>
      <w>176</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ITargetingAreaIntf
--
+GetLocation(): FVector
+SetAxes(float x, float y): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2344</x>
      <y>252</y>
      <w>176</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ITargetingVolumeIntf
--
+GetLocation(): FVector
+SetAxes(float x, float y, float z): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2344</x>
      <y>308</y>
      <w>176</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ITargetingArcIntf
--
+GetLocation(): FVector
+GetDirection(): FRotator
+GetDepth(): float
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2308</x>
      <y>180</y>
      <w>44</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;240.0;90.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2316</x>
      <y>180</y>
      <w>36</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0;70.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2532</x>
      <y>220</y>
      <w>56</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>Note..
Square, Circle, Etc.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2532</x>
      <y>268</y>
      <w>56</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>Note..
Cube, Sphere, Etc.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2532</x>
      <y>320</y>
      <w>72</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>Note..
Abstraction of a direction.
Imagine twin-stick shooter.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1744</x>
      <y>156</y>
      <w>68</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
delegates per delivery
m1=1
m2=1...n</panel_attributes>
    <additional_attributes>10.0;20.0;150.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2344</x>
      <y>372</y>
      <w>176</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ITargetingSetIntf
--
+GetTargets(): TArray&lt; TScriptInterface&lt;ITargetableIntf&gt; &gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2292</x>
      <y>180</y>
      <w>60</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;530.0;130.0;530.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2532</x>
      <y>380</y>
      <w>96</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>Note..
If there are particular targets in mind.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1764</x>
      <y>204</y>
      <w>192</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ITargeterIntf
--
+GetTargets(): TArray&lt; TScriptInterface&lt;ITargetableIntf&gt; &gt;
+GetTargetingMethods(): TArray&lt; TScriptInterface&lt;ITargetingMethodIntf&gt; &gt;
+GetTargetingPermissions(): TScriptInterface&lt;ITargetingPermissionsIntf&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>692</x>
      <y>0</y>
      <w>1400</w>
      <h>504</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;T-&gt;ITargetingMethodIntf&gt;
m1=1
m2=1</panel_attributes>
    <additional_attributes>3480.0;920.0;3480.0;820.0;3260.0;820.0;3280.0;120.0;3240.0;20.0;3220.0;10.0;10.0;10.0;10.0;1240.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1776</x>
      <y>272</y>
      <w>188</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ITargetableIntf
--
+GetTargetableLocation(): FVector
+GetTargetingPermissions(): TScriptInterface&lt;ITargetingPermissionsIntf&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1876</x>
      <y>340</y>
      <w>160</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ITargetableStorageIntf
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1740</x>
      <y>292</y>
      <w>44</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
realizes</panel_attributes>
    <additional_attributes>90.0;10.0;20.0;10.0;10.0;80.0;20.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1712</x>
      <y>232</y>
      <w>60</w>
      <h>116</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
realizes</panel_attributes>
    <additional_attributes>130.0;10.0;70.0;10.0;10.0;90.0;70.0;270.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1952</x>
      <y>256</y>
      <w>40</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;210.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1892</x>
      <y>320</y>
      <w>12</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1804</x>
      <y>132</y>
      <w>164</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ISkillDeliveryIntf
--
+GetSkill(): TScriptInterface&lt;ISkillIntf&gt;
+GetTargetingMethod(): TScriptInterface&lt;ITargetingMethodIntf&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1964</x>
      <y>152</y>
      <w>252</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
has
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;20.0;610.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1696</x>
      <y>168</y>
      <w>192</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
has
m1=1
m2=1</panel_attributes>
    <additional_attributes>460.0;10.0;460.0;80.0;10.0;80.0;10.0;500.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2064</x>
      <y>224</y>
      <w>220</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ITargetingPermissionsIntf
--
+CanTarget(OtherPermissions: const TScriptInterface&lt;ITargetingPermissionsIntf&gt;&amp;)
+AddPermission(Name: FName): void
+RemovePermission(Name: FName): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1708</x>
      <y>180</y>
      <w>64</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
uses t-methods
m1=1
m2=1</panel_attributes>
    <additional_attributes>140.0;110.0;10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2040</x>
      <y>368</y>
      <w>96</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ITargetingMethodStorageIntf</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1952</x>
      <y>240</y>
      <w>160</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0;130.0;200.0;380.0;200.0;380.0;320.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>696</x>
      <y>32</y>
      <w>1304</w>
      <h>472</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;T-&gt;ITargetableIntf&gt;
m1=1
m2=1</panel_attributes>
    <additional_attributes>3240.0;770.0;3240.0;20.0;10.0;20.0;10.0;1160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1952</x>
      <y>204</y>
      <w>148</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
</panel_attributes>
    <additional_attributes>10.0;20.0;350.0;20.0;350.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1960</x>
      <y>272</y>
      <w>140</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;330.0;80.0;330.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1952</x>
      <y>220</y>
      <w>88</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=-
targets
m1=0...n
m2=0...n</panel_attributes>
    <additional_attributes>10.0;10.0;160.0;10.0;160.0;190.0;30.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2012</x>
      <y>236</y>
      <w>60</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.
mediates</panel_attributes>
    <additional_attributes>10.0;20.0;130.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1936</x>
      <y>536</y>
      <w>200</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Note..
This diagram represents a robust skill system that employs
the use of the Decorator and Factory Method patterns.

SkillUsers and Skills are the focal points of this diagram.

SkillUsers have SkillStorage accounting for their Skills.

Each Skill in turn has SkillEffect and SkillMod storage.

Skills, SkillEffects, and SkillMods are each generated by
corresponding Factory methods that they possess.
i.e. MySkillUser.GetSkillStorage().AddSkill(FireballSkill.Make(), NPOS);

SkillEffects dictate how the Skill will affect the receiving SkillUser.
(e.g. DealDamage, MoveToLocation, AddArmor, etc.)

SkillMods apply modifications to SkillEffects, or add/remove them
from a Skill.
(This allows us to have things like, "This skill improves
the accuracy of your long-range skills by 40% for 10 seconds.")

SkillUsers are typically also Targeters. When using a Skill, they
will delegate its distribution to SkillDistributor which takes the Skill
and combines it with the corresponding list of TargetingMethods.

For each TargetingMethod, the SkillDistributor delegate a 
SkillDelivery to apply the Skill to all Targets acquired by that
TargetingMethod.

TargetingMethods range from specific targets to targets within
an arbitrary direction, area, or volume.

TargetingMethods will only find targets whose TargetingPermissions
allow the Targeter (the original SkillUser) to target the Targetable
(usually another SkillUser).

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1436</x>
      <y>412</y>
      <w>120</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=.&gt;&gt;
&lt;&lt;bind&gt;&gt;
&lt;T-&gt; ISkillIntf&gt;
m1=1
m2=1</panel_attributes>
    <additional_attributes>280.0;10.0;20.0;10.0;10.0;130.0;10.0;500.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1384</x>
      <y>608</y>
      <w>116</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>template=T
&lt;interface&gt;
IIntfFactoryIntf
--
+Make(): TScriptInterface&lt;T&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1276</x>
      <y>580</y>
      <w>160</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>Note..
An interface for a templateable factory method that produces
interface references to an interface type T
No need for Blueprint visibility, so templating works here.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1432</x>
      <y>640</y>
      <w>128</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=.&gt;&gt;
&lt;&lt;bind&gt;&gt;
&lt;T-&gt; ISkillModIntf&gt;
m1=1
m2=1</panel_attributes>
    <additional_attributes>300.0;350.0;10.0;350.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1152</x>
      <y>160</y>
      <w>428</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
owns
m1=1
m2=1</panel_attributes>
    <additional_attributes>1050.0;20.0;10.0;20.0;10.0;560.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1796</x>
      <y>404</y>
      <w>188</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ISkillReactiveIntf
--
+React(Skill: const TScriptInterface&lt;ISkillIntf&gt;&amp;): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1756</x>
      <y>340</y>
      <w>92</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
realizes</panel_attributes>
    <additional_attributes>160.0;160.0;160.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1764</x>
      <y>392</y>
      <w>40</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
reacts to</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;80.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>948</x>
      <y>60</y>
      <w>176</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ITimerIntf
--
+GetIsLooping(): bool
+SetIsLooping(isLooping: bool): void
+PauseTimer(): void
+UnpauseTimer(): void
+IsTimerActive(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>736</x>
      <y>160</y>
      <w>176</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
IDiscreteTimerIntf
// Functions like an FTimerHandle that runs off a counter
--
+GetTime(): int32
+SetTime(NewTime: const int32&amp;, isLooping: bool): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>736</x>
      <y>52</y>
      <w>176</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
IRealTimerIntf
// Functions like a natural FTimerHandle
--
+GetTime(): float
+SetTime(NewTime: const float&amp;, isLooping: bool): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>908</x>
      <y>100</y>
      <w>48</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>908</x>
      <y>76</y>
      <w>48</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>952</x>
      <y>304</y>
      <w>88</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>&lt;interface&gt;
ISkillTimerStorageIntf</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1024</x>
      <y>324</y>
      <w>96</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
&lt;&lt;bind&gt;&gt;
&lt;T-&gt;ISkillIntf&gt;
m1=1
m2=1</panel_attributes>
    <additional_attributes>220.0;170.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>716</x>
      <y>576</y>
      <w>156</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Note..
TODO:
Need to strip out references to an explicit array from this
interface and make it possible for people to store skills
as either maps or arrays based on preference.

Need to simultaneously allow this with ALL types of storage.
Skill
SkillEffect
SkillMod
TargetingMethod
Targetable

Inheritance may not be enough since we need to allow Array
and Map implementations for each of these types. OR
we would just literally have 2 for each. But that would be
super ugly, so we need to think of a way to get around
that.</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
